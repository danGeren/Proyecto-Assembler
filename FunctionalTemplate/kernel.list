
build/output.elf:     file format elf32-littlearm


Disassembly of section .init:

00000000 <_start>:
   0:	ea002024 	b	8098 <main>

Disassembly of section .text:

00008000 <GetGpioAddress>:
    8000:	e59f008c 	ldr	r0, [pc, #140]	; 8094 <SetGpio+0x3c>
    8004:	e1a0f00e 	mov	pc, lr

00008008 <SetGpioFunction>:
    8008:	e3500035 	cmp	r0, #53	; 0x35
    800c:	93510007 	cmpls	r1, #7
    8010:	81a0f00e 	movhi	pc, lr
    8014:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    8018:	e1a02000 	mov	r2, r0
    801c:	ebfffff7 	bl	8000 <GetGpioAddress>

00008020 <functionLoop$>:
    8020:	e3520009 	cmp	r2, #9
    8024:	8242200a 	subhi	r2, r2, #10
    8028:	82800004 	addhi	r0, r0, #4
    802c:	8afffffb 	bhi	8020 <functionLoop$>
    8030:	e0822082 	add	r2, r2, r2, lsl #1
    8034:	e1a01211 	lsl	r1, r1, r2
    8038:	e3a03007 	mov	r3, #7
    803c:	e1a03213 	lsl	r3, r3, r2
    8040:	e1e03003 	mvn	r3, r3
    8044:	e5902000 	ldr	r2, [r0]
    8048:	e0022003 	and	r2, r2, r3
    804c:	e1811002 	orr	r1, r1, r2
    8050:	e5801000 	str	r1, [r0]
    8054:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00008058 <SetGpio>:
    8058:	e3500035 	cmp	r0, #53	; 0x35
    805c:	81a0f00e 	movhi	pc, lr
    8060:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    8064:	e1a02000 	mov	r2, r0
    8068:	ebffffe4 	bl	8000 <GetGpioAddress>
    806c:	e1a032a2 	lsr	r3, r2, #5
    8070:	e1a03103 	lsl	r3, r3, #2
    8074:	e0800003 	add	r0, r0, r3
    8078:	e202201f 	and	r2, r2, #31
    807c:	e3a03001 	mov	r3, #1
    8080:	e1a03213 	lsl	r3, r3, r2
    8084:	e3310000 	teq	r1, #0
    8088:	05803028 	streq	r3, [r0, #40]	; 0x28
    808c:	1580301c 	strne	r3, [r0, #28]
    8090:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
    8094:	20200000 	.word	0x20200000

00008098 <main>:
    8098:	e3a0d902 	mov	sp, #32768	; 0x8000
    809c:	e3a00017 	mov	r0, #23
    80a0:	e3a01001 	mov	r1, #1
    80a4:	ebffffd7 	bl	8008 <SetGpioFunction>
    80a8:	e3a00018 	mov	r0, #24
    80ac:	e3a01001 	mov	r1, #1
    80b0:	ebffffd4 	bl	8008 <SetGpioFunction>
    80b4:	e3a00019 	mov	r0, #25
    80b8:	e3a01001 	mov	r1, #1
    80bc:	ebffffd1 	bl	8008 <SetGpioFunction>

000080c0 <loop$>:
    80c0:	e3a00017 	mov	r0, #23
    80c4:	e59f1088 	ldr	r1, [pc, #136]	; 8154 <loop$+0x94>
    80c8:	eb000022 	bl	8158 <encenderLed>
    80cc:	e3a00018 	mov	r0, #24
    80d0:	e59f107c 	ldr	r1, [pc, #124]	; 8154 <loop$+0x94>
    80d4:	eb00001f 	bl	8158 <encenderLed>
    80d8:	e3a00019 	mov	r0, #25
    80dc:	e59f1070 	ldr	r1, [pc, #112]	; 8154 <loop$+0x94>
    80e0:	eb00001c 	bl	8158 <encenderLed>
    80e4:	e3a00017 	mov	r0, #23
    80e8:	e3a01005 	mov	r1, #5
    80ec:	eb000022 	bl	817c <apagarLed>
    80f0:	e3a00018 	mov	r0, #24
    80f4:	e3a01005 	mov	r1, #5
    80f8:	eb00001f 	bl	817c <apagarLed>
    80fc:	e3a00019 	mov	r0, #25
    8100:	e3a01005 	mov	r1, #5
    8104:	eb00001c 	bl	817c <apagarLed>
    8108:	e3a00017 	mov	r0, #23
    810c:	e3a01005 	mov	r1, #5
    8110:	eb000010 	bl	8158 <encenderLed>
    8114:	e3a00018 	mov	r0, #24
    8118:	e3a01005 	mov	r1, #5
    811c:	eb00000d 	bl	8158 <encenderLed>
    8120:	e3a00019 	mov	r0, #25
    8124:	e3a01005 	mov	r1, #5
    8128:	eb00000a 	bl	8158 <encenderLed>
    812c:	e3a00017 	mov	r0, #23
    8130:	e3a01005 	mov	r1, #5
    8134:	eb000010 	bl	817c <apagarLed>
    8138:	e3a00018 	mov	r0, #24
    813c:	e3a01005 	mov	r1, #5
    8140:	eb00000d 	bl	817c <apagarLed>
    8144:	e3a00019 	mov	r0, #25
    8148:	e3a01005 	mov	r1, #5
    814c:	eb00000a 	bl	817c <apagarLed>
    8150:	eaffffda 	b	80c0 <loop$>
    8154:	0007a120 	.word	0x0007a120

00008158 <encenderLed>:
    8158:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    815c:	e1a05000 	mov	r5, r0
    8160:	e1a06001 	mov	r6, r1
    8164:	e1a00005 	mov	r0, r5
    8168:	e3a01001 	mov	r1, #1
    816c:	ebffffb9 	bl	8058 <SetGpio>
    8170:	e1a00006 	mov	r0, r6
    8174:	eb00000f 	bl	81b8 <Wait>
    8178:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

0000817c <apagarLed>:
    817c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    8180:	e1a05000 	mov	r5, r0
    8184:	e1a06001 	mov	r6, r1
    8188:	e1a00005 	mov	r0, r5
    818c:	e3a01000 	mov	r1, #0
    8190:	ebffffb0 	bl	8058 <SetGpio>
    8194:	e1a00006 	mov	r0, r6
    8198:	eb000006 	bl	81b8 <Wait>
    819c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

000081a0 <GetSystemTimerBase>:
    81a0:	e59f0034 	ldr	r0, [pc, #52]	; 81dc <loop$+0x14>
    81a4:	e1a0f00e 	mov	pc, lr

000081a8 <GetTimeStamp>:
    81a8:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    81ac:	ebfffffb 	bl	81a0 <GetSystemTimerBase>
    81b0:	e1c000d4 	ldrd	r0, [r0, #4]
    81b4:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

000081b8 <Wait>:
    81b8:	e1a02000 	mov	r2, r0
    81bc:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    81c0:	ebfffff8 	bl	81a8 <GetTimeStamp>
    81c4:	e1a03000 	mov	r3, r0

000081c8 <loop$>:
    81c8:	ebfffff6 	bl	81a8 <GetTimeStamp>
    81cc:	e0401003 	sub	r1, r0, r3
    81d0:	e1510002 	cmp	r1, r2
    81d4:	9afffffb 	bls	81c8 <loop$>
    81d8:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
    81dc:	20003000 	.word	0x20003000
